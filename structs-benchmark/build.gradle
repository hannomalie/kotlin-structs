
plugins {
    id 'org.jetbrains.kotlin.jvm'
    id "me.champeau.gradle.jmh" version "0.4.8"
}
apply plugin: 'application'

sourceCompatibility = 1.8

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile 'org.openjdk.jmh:jmh-core:1.21'
    compile 'org.openjdk.jmh:jmh-generator-annprocess:1.21'
    compile 'org.spf4j:spf4j-jmh:8.5.15'

    compile project(':structs')

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

mainClassName = 'de.hanno.struct.benchmark.StructBenchmark'
applicationDefaultJvmArgs = ['-XX:+UnlockCommercialFeatures', '-XX:+UnlockDiagnosticVMOptions', '-XX:+TraceClassLoading', '-XX:+LogCompilation', '-XX:+PrintAssembly']

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs = ["-Xno-call-assertions", "-Xno-param-assertions"]
    // A temporary fix for KT-41105 to circumvent a compiler bug where using a delegated property with inline operators
    // causes the compiler to crash
    kotlinOptions.useIR = true

}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
    // A temporary fix for KT-41105 to circumvent a compiler bug where using a delegated property with inline operators
    // causes the compiler to crash
    kotlinOptions.useIR = true
}

jar {
    manifest {
//        attributes 'Main-Class': 'org.openjdk.jmh.Main'
        attributes 'Main-Class': 'de.hanno.struct.benchmark.StructBenchmark'
    }
}

jmh {
    humanOutputFile = project.file("${project.buildDir}/reports/jmh/human.txt")
    resultsFile = project.file("${project.buildDir}/reports/jmh/results.txt")
    profilers = ["comp", "perf"]
}